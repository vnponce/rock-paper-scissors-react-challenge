{"version":3,"sources":["score.jsx","header.jsx","Wrapper.jsx","Token.jsx","Button.jsx","Table.jsx","Rules.jsx","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrapperStyled","Wrapper","children","shadow","keyframes","TokenStyled","name","color","base","border","isShadowAnimated","playing","colors","paper","rock","scissors","default","Token","onClick","console","log","className","src","alt","ButtonStyled","WhiteButton","Button","props","TableWrapper","results","elements","Table","useState","setPlaying","pick","setPick","result","setResult","housePick","setHousePick","setScore","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playWithIA","RulesStyled","visible","Rules","setVisible","handleToggleClick","createContext","AppStyled","main","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31095e51.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ScoreContext } from './App';\n\nconst ScoreStyled = styled.div`\n  background: #fff;\n  padding: 10px;\n  text-align: center;\n  border-radius: 8px;\n  width: 80px;\n  small {\n    color: #2a45c2;\n    text-transform: uppercase;\n    font-size: 10px;\n    font-weight: bold;\n    letter-spacing: 1px;\n  }\n  p {\n    color: #565468;\n    font-size: 40px;\n    margin: 0;\n    font-weight: 700;\n    letter-spacing: -2px;\n    position: relative;\n    left: -2.5px;\n  }\n  @media screen and (min-width: 764px) {\n    padding: 10px 20px;\n    small {\n      font-size: 16px;\n    }\n    p {\n      font-size: 60px;\n    }\n  }\n`;\n\nfunction Score() {\n  const { score } = useContext(ScoreContext);\n  return (\n    <ScoreStyled>\n      <small>Score</small>\n      <p>{ score }</p>\n    </ScoreStyled>\n  );\n}\n\nexport default Score;","import React from 'react';\nimport styled from 'styled-components';\nimport Score from './score'\n\nconst HeaderStyled = styled.div`\n  color: white;\n  border: 3px solid rgba(255, 255, 255, 0.29);\n  padding: 12px 12px 12px 23px;\n  border-radius: .5em;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  h1 {\n    font-size: 18px;\n    text-transform: uppercase;\n    line-height: 16px;\n    font-weight: 700;\n    margin: 0;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 24px;\n    h1 {\n      font-size: 36px;\n      line-height: .8;\n    }\n  }\n`;\n\nfunction Header() {\n  return (\n    <HeaderStyled>\n      <h1>\n        Rock <br/>Paper <br/> Scissors\n      </h1>\n      <Score />\n    </HeaderStyled>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n  max-width: 700px;\n  margin: auto;\n`;\n\nfunction Wrapper({ children }) {\n  return (\n    <WrapperStyled>\n      { children }\n    </WrapperStyled>\n  )\n}\n\nexport default Wrapper;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst shadow = keyframes`\n  to {\n    box-shadow: 0 0 0 40px rgba(255, 255, 255, .03), 0 0 0 80px rgba(255, 255, 255, .02), 0 0 0 120px rgba(255, 255, 255, .01);\n    // transform: rotateY(360deg) scale(1.1);\n    transform: scale(1.1);\n  }\n`;\n\nconst TokenStyled = styled.div`\n  width: 130px;\n  height: 125px;\n  padding: ${({ name }) => (name === 'default') ? '16px' : '0'};\n  border: 16px solid ${({color}) => color.base};\n  box-sizing: border-box;\n  border-radius: 50%;\n  display: flex;\n  background: ${({ name }) => (name === 'default') ? '#122343' : 'white'};\n  box-shadow: 0 5px 0 ${({color}) => color.border};\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  ${({ isShadowAnimated }) => isShadowAnimated && 'box-shadow: 0 0 0 0px rgba(255, 255, 255, .03), 0 0 0 0px rgba(255, 255, 255, .02), 0 0 0 0px rgba(255, 255, 255, .01);'};\n  animation: 1s ${({ isShadowAnimated }) => isShadowAnimated && shadow} forwards;\n  &:active {\n    transform: scale(.9);\n  }\n  .box {\n    box-shadow: 0 -4px 0 #BABFD4;  \n    flex: 1;\n    align-self: stretch;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;  \n    img {\n      width: 40%;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    ${({ playing }) => playing ? 'width: 300px; height: 295px; border-width: 32px;' : 'width: 200px; height: 195px;'}\n  }\n`;\n\nconst colors = {\n  paper: {\n    base: '#516ef4',\n    border: '#2543c3',\n  },\n  rock: {\n    base: '#de3a5a',\n    border: '#980e31',\n  },\n  scissors: {\n    base: '#eca81e',\n    border: '#c76c14',\n  },\n  default: {\n    base: 'transparent',\n    border: 'transparent',\n  },\n};\n\nfunction Token({ name = 'default', onClick, isShadowAnimated = false, playing = false }) {\n  console.log('name =>', name);\n  function handleClick() {\n    if(onClick) {\n      onClick(name);\n    }\n  };\n  const color = colors[name];\n  return (\n    <TokenStyled color={color} onClick={handleClick} name={name} isShadowAnimated={isShadowAnimated} playing={playing}>\n      <div className=\"box\">\n        <img src={`./images/icon-${name}.svg`} alt=\"\"/>\n      </div>\n    </TokenStyled>\n  );\n}\n\nexport default Token;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonStyled = styled.div`\n  display: inline-flex;\n  border: 1px solid white;\n  border-radius: .5em;\n  min-width: 128px;\n  padding: 0.7em;\n  box-sizing: border-box;\n  justify-content: center;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 2.5px;\n  :hover {\n    background: #fff;\n    color: #101a3f;\n  }\n`;\n\nexport const WhiteButton = styled(ButtonStyled)`\n  background: #fff;\n  color: #101a3f;\n  min-width: 220px;\n`;\n\nfunction Button({ children, ...props }) {\n  return (\n    <ButtonStyled {...props}>\n      {children}\n    </ButtonStyled>\n  );\n}\n\nexport default Button;","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport Token from './Token';\nimport { WhiteButton } from './Button'\nimport { ScoreContext } from \"./App\";\n\nconst TableWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 130px 130px;\n  justify-content: center;\n  justify-items: center;\n  grid-gap: 30px 50px;\n  margin: 2em 0;\n  position: relative;\n  & div:nth-of-type(3) {\n    grid-column: span 2;\n  }\n  .line {\n    display: ${({ playing }) => !playing ? 'block' : 'none'};\n    height: 15px;\n    background: rgba(0, 0, 0, 0.5);\n    position: absolute;\n    width: 200px;\n    top: 58px;\n    &:before {\n      content: '';\n      height: 15px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(60deg);\n      transform-origin: left top;\n    }\n    &:after {\n      content: '';\n      height: 15px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: rotate(-60deg);\n      transform-origin: right top;\n    }\n  }\n  .in-game {\n    text-align: center;\n    text-transform: uppercase;\n    font-size: .8em;\n    font-weight: 700;\n    letter-spacing: 2px;\n  }\n  .results {\n    text-align: center;\n    h2 {\n      text-transform: uppercase;\n      font-size: 56px;\n      margin: 10px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    // grid-gap: 30px 140px;\n    grid-template-columns: 300px 300px;\n    ${({ playing, results }) => (playing && results) && 'grid-template-columns: 300px 110px 110px 300px;'}\n    & div:nth-of-type(3) {\n      ${({ playing, results }) => (playing && results) && 'grid-column: 2 / 4; grid-row: 1;'}\n    }\n    .line {\n      width: 300px;\n    }\n    .results {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n    }\n    .in-game {\n      font-size: 1.2em;\n      display: flex;\n      flex-direction: column-reverse;\n      p {\n        margin-bottom: 2em;\n      }\n    }\n  }\n`;\n\nconst elements = [\n  'paper',\n  'scissors',\n  'rock',\n];\n\nfunction Table() {\n  // const [score, setScore] = useState(0);\n  const [playing, setPlaying] = useState(false);\n  const [pick, setPick] = useState('');\n  const [result, setResult] = useState('');\n  const [housePick, setHousePick] = useState('default');\n  const { score, setScore } = useContext(ScoreContext);\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * ( max - min) + min);\n  }\n  function launchHousePick() {\n    return new Promise((resolve, reject) => {\n      let pick;\n      const interval = setInterval(() => {\n        pick = elements[getRandomInt(0, 3)];\n        setHousePick(pick);\n      }, 75);\n      setTimeout(() => {\n        clearInterval(interval);\n        resolve(pick);\n      }, 2000);\n    });\n    // return elements[getRandomInt(0, 3)];\n  }\n  async function onClick(name) {\n    setResult('');\n    setPlaying(true);\n    setPick(name);\n    const house = await launchHousePick();\n    const results = playWithIA(name, house);\n    setResult(results);\n    if(results === 'win') {\n      setScore(score + 1);\n    }\n  }\n  function playWithIA(pick, housePick) {\n    console.log('comparando', pick, housePick);\n    if(housePick === pick) {\n      return 'draw';\n    }\n    // paper\n    if(pick === 'paper') {\n      if(housePick === 'scissors') {\n        return 'lose'\n      }\n      if(housePick === 'rock') {\n        return 'win'\n      }\n    }\n    // scissors\n    if(pick === 'scissors') {\n      if(housePick === 'paper') {\n        return 'win';\n      }\n      if(housePick === 'rock') {\n        return 'lose'\n      }\n    }\n    // rock\n    if(pick === 'rock') {\n      if(housePick === 'paper') {\n        return 'lose';\n      }\n      if(housePick === 'scissors') {\n        return 'win'\n      }\n    }\n\n  }\n  function handleTryAgainClick() {\n    setPlaying(false);\n  }\n  return (\n    <TableWrapper playing={playing} results={result !== ''}>\n      <span className=\"line\"></span>\n      {\n        !playing ? (\n          <>\n            <Token name=\"paper\" onClick={onClick} />\n            <Token name=\"scissors\" onClick={onClick} />\n            <Token name=\"rock\" onClick={onClick} />\n          </>\n        ) : (\n          <>\n            <div className=\"in-game\">\n              <Token name={pick} playing={playing} isShadowAnimated={result === 'win'}/>\n              <p>You picked</p>\n            </div>\n            <div className=\"in-game\">\n              <Token name={housePick} playing={playing} isShadowAnimated={result === 'lose'}/>\n              <p>The house picked</p>\n            </div>\n              <div className=\"results\">\n                { result &&\n                  <>\n                    <h2>YOU {result}</h2>\n                    <WhiteButton onClick={handleTryAgainClick}>\n                      Try Again\n                    </WhiteButton>\n                  </>\n                }\n              </div>\n          </>\n        )\n      }\n    </TableWrapper>\n  );\n}\n\nexport default Table;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button'\n\nconst RulesStyled = styled.div`\n  text-align: center;\n  &::before {\n    display: ${({ visible }) => visible ? 'block' : 'none'};\n    content: '';\n    position: absolute;\n    z-index: 2;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background: rgba(0, 0, 0, 0.6);\n  }\n  .rules-modal {\n    padding: 4em 0;\n    background: white;\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 3;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n    h2 {\n      color: #3b4262;\n      text-transform: uppercase;\n      font-weight: 700;\n      letter-spacing: -2px;\n      margin-bottom: 1em;\n    }\n  }\n  .close-button {\n    margin-top: 2em;\n    cursor:pointer;\n  }\n  @media screen and (min-width: 768px) {\n    .button {\n      position: fixed;\n      right: 2em;\n      bottom: 2em;\n    }\n    .rules-modal {\n      width: 400px;\n      margin: auto;\n      border-radius: 8px;\n      top: 0;\n      bottom: initial;\n      transform: translateY(50%);\n      padding: 2em;\n      box-sizing: border-box;\n      h2 {\n        align-self: flex-start;\n        font-size: 32px;\n        margin: 0 0 1.2em 0;\n      }\n    }\n    .close-button {\n      position: absolute;\n      right: 2em;\n      top: .8em;\n    }\n  }\n`;\n\nfunction Rules() {\n  const [visible, setVisible] = useState(false);\n  function handleToggleClick() {\n    setVisible(!visible);\n  }\n  return (\n    <RulesStyled visible={visible}>\n      {\n        visible && (\n          <div className=\"rules-modal\">\n            <h2>Rules</h2>\n            <img src=\"/images/image-rules.svg\" alt=\"Game rules\"/>\n            <img className=\"close-button\" onClick={handleToggleClick} src=\"/images/icon-close.svg\" alt=\"Close game rules\"/>\n          </div>\n        )\n      }\n      <Button onClick={handleToggleClick} className=\"button\">\n        Rules\n      </Button>\n    </RulesStyled>\n  );\n}\n\nexport default Rules;","import React, { createContext, useState } from 'react';\nimport './App.css';\nimport Header from './header';\nimport styled from 'styled-components';\nimport Wrapper from './Wrapper'\nimport Table from './Table';\nimport Rules from './Rules'\n\nexport const ScoreContext = createContext();\n\nconst AppStyled = styled.main`\n  color: white;\n  background-image: radial-gradient(circle at top, #1F3757 0%, #131537 100%);\n  font-family: 'Barlow Semi Condensed', sans-serif;\n  .app-content {\n    padding: 2em;\n    box-sizing: border-box;  \n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  return (\n    <ScoreContext.Provider value={{\n      score,\n      setScore\n    }}>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header/>\n            <Table />\n            <Rules />\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}